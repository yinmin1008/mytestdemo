
# 定义一个列表[1, 2, 3]，并将列表中的头尾两个元素对调。对调后为[3, 2, 1]
a = [1, 2, 3]
# print(a[::-1])
a.reverse()
# print(a)

# 定义一个列表，并将列表中的指定位置的两个元素对调。对调第一个和第三个元素
# 列表如下：[23, 65, 19, 90] ,对调后结果：[19, 65, 23, 90]
b = [23, 65, 19, 90]
b[0] = 19
b[2] = 23
# print(b)

# 对列表[10, 11, 12, 13, 14, 15]翻转，调整后为[15, 14, 13, 12, 11, 10]
c = [10, 11, 12, 13, 14, 15]
c.reverse()
# print(c)
# print(c[::-1])

# 判定6是否包含列表[ 1, 6, 3, 5, 3, 4 ]
d = [ 1, 6, 3, 5, 3, 4 ]
# print(d.index(6))

# [ 1, 6, 3, 5, 3, 4 ]转换为元组
e = [ 1, 6, 3, 5, 3, 4 ]
# print(tuple(e))

# 根据列表[ 1, 6, 3, 5, 3, 4 ]作为新字典的key,对应key的初始值为0，并打印新字典对象
aa = [ 1, 6, 3, 5, 3, 4 ]

# 循环打印出字典{'name':'aming','age':18,'school':'cema'}中的所有键和值
bb = {'name':'aming','age':18,'school':'cema'}
cc = {}
for i in bb:
    print(i,bb[i])
    cc[i] = bb[i]
print(cc)

#{‘taobao’,'jingdong','alibaba','baidu','taobao'}对元素去重复  （不做）

# 分别有两个集合{1,2,1,3,4,5,6,7}，{1,2,3,8,9,7,10}，求两个集合的差集、并集、交集（不做）









